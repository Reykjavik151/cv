{"version":3,"sources":["components/DefaultText/default-text.props.ts","reportWebVitals.ts","assets/index.ts","assets/images/roman-photo.jpg","components/DefaultText/default-text.styles.ts","components/DefaultText/index.tsx","components/PageContainer/page-container.styles.ts","components/PageContainer/index.tsx","themes/colors.ts","themes/themes.ts","components/ThemeSwitcher/theme-switcher.data.ts","components/ThemeSwitcher/theme-switcher.styles.ts","components/ThemeProvider/index.tsx","components/ThemeSwitcher/index.tsx","components/ProfileCard/profile-card.styles.ts","components/ProfileCard/index.tsx","pages/Main/index.tsx","App.tsx","index.tsx"],"names":["DefaultTextPreset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","IMAGES","ROMAN_PHOTO","StyledContainer","styled","div","StyledDefaultText","span","theme","color","PRIMARY_TEXT","StyledTitle","StyledDescription","StyledSmallText","StyledMediumText","StyledLargeText","DefaultText","children","preset","StyledPresetText","useMemo","Description","Title","Small","Medium","Large","Container","PRIMARY","PageContainer","COLORS","LIGHT_THEME","PRIMARY_ADDITIONAL","SECONDARY","SECONDARY_ADDITIONAL","SECONDARY_TEXT","DARK_THEME","THEMES_BUTTONS","id","Icon","FaSun","size","BiMoon","ThemeContext","React","createContext","ThemeProvider","useState","setTheme","Provider","value","ThemeSwitcher","useContext","globalTheme","getOnThemeButtonPress","useCallback","map","onClick","opacity","CardContainer","Avatar","img","InfoContainer","ProfileCard","author","position","description","photoSource","src","MainPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6df0e77.chunk.js","sourcesContent":["export enum DefaultTextPreset {\n  Small = \"small\",\n  Medium = \"medium\",\n  Large = \"large\",\n  Description = \"description\",\n  Title = \"title\",\n}\n\nexport interface IDefaultTextProps {\n  preset?: DefaultTextPreset;\n  color?: string;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ROMAN_PHOTO from \"./images/roman-photo.jpg\";\n\nexport const IMAGES = {\n  ROMAN_PHOTO,\n};\n\nexport const FONTS = {\n  ROBOTO: '\"Roboto\", sans-serif',\n};\n","export default __webpack_public_path__ + \"static/media/roman-photo.3952ce12.jpg\";","import styled from \"styled-components\";\n\nimport { FONTS } from \"../../assets\";\n\nexport const StyledContainer = styled.div``;\n\ninterface IStyledDefaultTextProps {\n  color?: string;\n}\nexport const StyledDefaultText = styled.span<IStyledDefaultTextProps>`\n  color: ${({ theme, color }) => color ?? theme.PRIMARY_TEXT};\n  font-family: ${FONTS.ROBOTO};\n`;\n\nexport const StyledTitle = styled.span`\n  font-size: 4rem;\n  font-weight: bold;\n`;\nexport const StyledDescription = styled.span``;\nexport const StyledSmallText = styled.span``;\nexport const StyledMediumText = styled.span`\n  font-size: 2rem;\n  font-weight: 500;\n`;\nexport const StyledLargeText = styled.span``;\n","import React, { useMemo } from \"react\";\n\nimport { DefaultTextPreset, IDefaultTextProps } from \"./default-text.props\";\nimport {\n  StyledContainer,\n  StyledDefaultText,\n  StyledDescription,\n  StyledLargeText,\n  StyledMediumText,\n  StyledSmallText,\n  StyledTitle,\n} from \"./default-text.styles\";\n\nexport const DefaultText: React.FC<IDefaultTextProps> = ({\n  children,\n  preset,\n  color,\n}) => {\n  const StyledPresetText = useMemo(() => {\n    switch (preset) {\n      default:\n      case DefaultTextPreset.Description:\n        return StyledDescription;\n      case DefaultTextPreset.Title:\n        return StyledTitle;\n      case DefaultTextPreset.Small:\n        return StyledSmallText;\n      case DefaultTextPreset.Medium:\n        return StyledMediumText;\n      case DefaultTextPreset.Large:\n        return StyledLargeText;\n    }\n  }, [preset]);\n\n  return (\n    <StyledContainer>\n      <StyledDefaultText color={color}>\n        <StyledPresetText>{children}</StyledPresetText>\n      </StyledDefaultText>\n    </StyledContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nimport { IThemed } from \"../../utils/types\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${({ theme }: IThemed) => theme.PRIMARY};\n`;\n","import React from \"react\";\n\nimport { Container } from \"./page-container.styles\";\nimport { IPageContainerProps } from \"./page-container.props\";\n\nexport const PageContainer: React.FC<IPageContainerProps> = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n","// Use this source to name your color correctly\n// https://chir.ag/projects/name-that-color/\n\nexport const COLORS = {\n  MELROSE: \"#C2ABFF\",\n  SCANDAL: \"#D5FBE4\",\n  CARIBBEAN_GREEN: \"#00B072\",\n  CAPE_HONEY: \"#FFE6AB\",\n  ALMOST_WHITE: \"#FAFAFA\",\n  ALMOST_BLACK: \"#222222\",\n};\n","import { COLORS } from \"./colors\";\nimport { ITheme } from \"./themes.interface\";\n\nexport const LIGHT_THEME: ITheme = {\n  PRIMARY: COLORS.SCANDAL,\n  PRIMARY_ADDITIONAL: COLORS.CARIBBEAN_GREEN,\n  PRIMARY_TEXT: COLORS.CARIBBEAN_GREEN,\n  SECONDARY: COLORS.ALMOST_BLACK,\n  SECONDARY_ADDITIONAL: COLORS.CARIBBEAN_GREEN,\n  SECONDARY_TEXT: COLORS.SCANDAL,\n};\n\n// TODO: setup colors\nexport const DARK_THEME: ITheme = {\n  PRIMARY: COLORS.ALMOST_BLACK,\n  PRIMARY_ADDITIONAL: COLORS.ALMOST_BLACK,\n  PRIMARY_TEXT: COLORS.CAPE_HONEY,\n  SECONDARY: COLORS.CAPE_HONEY,\n  SECONDARY_ADDITIONAL: COLORS.CAPE_HONEY,\n  SECONDARY_TEXT: COLORS.MELROSE,\n};\n","import { IconType } from \"react-icons\";\nimport { BiMoon } from \"react-icons/bi\";\nimport { FaSun } from \"react-icons/fa\";\n\nimport { DARK_THEME, LIGHT_THEME } from \"../../themes/themes\";\nimport { ITheme } from \"../../themes/themes.interface\";\n\ninterface IThemeButton {\n  id: string;\n  theme: ITheme;\n  Icon: IconType;\n  size: number;\n}\n\nexport const THEMES_BUTTONS: IThemeButton[] = [\n  {\n    id: \"ligth-theme\",\n    theme: LIGHT_THEME,\n    Icon: FaSun,\n    size: 40,\n  },\n  {\n    id: \"dark-theme\",\n    theme: DARK_THEME,\n    Icon: BiMoon,\n    size: 45,\n  },\n];\n\nexport const ACTIVE_THEME_OPACITY = 1;\n\nexport const INACTIVE_THEME_OPACITY = 0.3;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  right: 0.5rem;\n  bottom: 0.5rem;\n  width: 8rem;\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n","import React, { useState } from \"react\";\nimport { ThemeProvider as StyledThemeProvider } from \"styled-components\";\n\nimport { LIGHT_THEME } from \"../../themes/themes\";\nimport { ITheme } from \"../../themes/themes.interface\";\nimport { IThemeContext } from \"./context\";\n\nexport const ThemeContext = React.createContext<IThemeContext>(\n  {} as IThemeContext\n);\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n  const [theme, setTheme] = useState<ITheme>(LIGHT_THEME);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <StyledThemeProvider theme={theme}>{children}</StyledThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport map from \"lodash/map\";\n\nimport {\n  ACTIVE_THEME_OPACITY,\n  INACTIVE_THEME_OPACITY,\n  THEMES_BUTTONS,\n} from \"./theme-switcher.data\";\nimport { Container } from \"./theme-switcher.styles\";\nimport { ITheme } from \"../../themes/themes.interface\";\nimport { ThemeContext } from \"../ThemeProvider\";\n\nexport const ThemeSwitcher: React.FC = () => {\n  const { theme: globalTheme, setTheme } = useContext(ThemeContext);\n\n  const getOnThemeButtonPress = useCallback(\n    (theme: ITheme) => () => setTheme(theme),\n    [setTheme]\n  );\n\n  return (\n    <Container>\n      {map(THEMES_BUTTONS, ({ id, theme, Icon, size }) => (\n        <Icon\n          key={`theme-button-${id}`}\n          onClick={getOnThemeButtonPress(theme)}\n          size={size}\n          opacity={\n            globalTheme === theme\n              ? ACTIVE_THEME_OPACITY\n              : INACTIVE_THEME_OPACITY\n          }\n          color={globalTheme.PRIMARY_TEXT}\n        />\n      ))}\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\nimport { IThemed } from \"../../utils/types\";\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  background-color: ${({ theme }: IThemed) => theme.SECONDARY};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CardContainer = styled.div`\n  width: 60%;\n  @media (max-width: 1500px) {\n    width: 80%;\n  }\n  height: 100%;\n  display: flex;\n`;\n\nexport const Avatar = styled.img`\n  height: 16rem;\n  width: 16rem;\n  margin: 2rem 0;\n  border-radius: 14rem;\n  border: 0.6rem solid ${({ theme }: IThemed) => theme.PRIMARY_ADDITIONAL};\n`;\n\nexport const InfoContainer = styled.div`\n  padding: 2rem 3rem;\n  flex: 1;\n  flex-direction: column;\n`;\n","import React, { useContext } from \"react\";\n\nimport { ThemeSwitcher } from \"../ThemeSwitcher\";\nimport {\n  Avatar,\n  CardContainer,\n  Container,\n  InfoContainer,\n} from \"./profile-card.styles\";\nimport { IProfileCardProps } from \"./profile-card.props\";\nimport { IMAGES } from \"../../assets\";\nimport { DefaultText } from \"../DefaultText\";\nimport { DefaultTextPreset } from \"../DefaultText/default-text.props\";\nimport { ThemeContext } from \"../ThemeProvider\";\n\nexport const ProfileCard: React.FC<IProfileCardProps> = ({\n  author = \"Roman Andreev\",\n  position = \"Senior React Native Developer\",\n  description = \"Extra-experienced developer with amazing programming power!\",\n  photoSource = IMAGES.ROMAN_PHOTO,\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <Container>\n      <CardContainer>\n        <Avatar src={photoSource} />\n        <InfoContainer>\n          <DefaultText preset={DefaultTextPreset.Title}>{author}</DefaultText>\n          <DefaultText\n            preset={DefaultTextPreset.Medium}\n            color={theme.SECONDARY_TEXT}\n          >\n            {position}\n          </DefaultText>\n        </InfoContainer>\n      </CardContainer>\n      <ThemeSwitcher />\n    </Container>\n  );\n};\n","import React from \"react\";\n\nimport { PageContainer, ProfileCard } from \"../../components\";\nimport { IMainPageProps } from \"./main.props\";\n\nexport const MainPage: React.FC<IMainPageProps> = () => {\n  return (\n    <PageContainer>\n      <ProfileCard />\n    </PageContainer>\n  );\n};\n","import React from \"react\";\n\nimport { ThemeProvider } from \"./components\";\nimport { MainPage } from \"./pages\";\n\nexport const App: React.FC = () => {\n  return (\n    <ThemeProvider>\n      <MainPage />\n    </ThemeProvider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./common.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}